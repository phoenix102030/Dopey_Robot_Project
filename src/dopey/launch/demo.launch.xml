<?xml version="1.0"?>
<launch>
    <!-- Static transform broadcaster -->
    <include file="$(find-pkg-share dopey)/launch/static.xml"/>

    <!-- RVIZ with lots of info shit-->
    <node pkg ="rviz2" exec="rviz2" name="rviz2" output="log"/>
    <!-- <executable name="rviz2" cmd="$(find-pkg-share dopey)/scripts/start_rviz.sh" output="log"/> -->
   
    <!-- Launches phidgets in multithread so the robot doesnt kill itself -->
    <include file="$(find-pkg-share dopey)/launch/phidgets_launch.py"/>

    <!-- Lidar node, ttyUSB1 usually, sometimes ttyUSB0-->
    <node pkg="rplidar_ros" exec ="rplidar_node" name="rplidar_node" output="screen">
        <param name="channel_type" value="serial"/>
        <param name="serial_port" value="/dev/ttyUSB1"/>
        <param name="serial_baudrate" value="115200"/>
        <param name="frame_id" value="lidar"/>
        <param name="inverted" value="false"/>
        <param name="angle_compensate" value="true"/>
        <param name="scan_mode" value=""/>
        <param name="initial_reset" value="true"/>
    </node>

    <!-- Realsense camera node-->
    <include file="$(find-pkg-share realsense2_camera)/launch/rs_launch.py">
        <arg name="depth_module.profile" value="640x480x30"/>
        <arg name="rgb_camera.profile" value="640x480x30"/>
        <arg name="pointcloud.enable" value="true"/>
        <arg name="pointcloud.ordered_pc" value="true"/>
        <arg name="align_depth.enable" value="true"/>
        <arg name="initial_reset" value="true"/>
    </include>

    <!-- Display Markers Node-->
    <node pkg="display_markers" exec="display_markers" name="display_markers"/>
    
    <!-- Aruco detecion and publishing-->
    <node name="aruco" pkg="aruco_ros" exec="marker_publisher" output='screen'>
		<remap from="/camera_info" to="/camera/camera/color/camera_info"/>
		<remap from="/image" to="/camera/camera/color/image_raw"/>
		<param name="image_is_rectified" value="True"/>
		<param name="marker_size"        value="0.05"/> 
		<param name="reference_frame"    value=""/>   
		<param name="camera_frame"       value="camera_color_optical_frame"/>
	</node>

    <!-- Keyboard controller to move the robot -->
    <node pkg="controller" exec="keyboard_controller" name="keyboard_controller"/>

    <!-- USB cam node stuf-->
    <node pkg="usb_cam" name="usb_cam" exec="usb_cam_node_exe" output="screen" >
        <param name="camera_info_url" value="file:///home/user/KTH_Robotics_Dopey/src/camera_config/cam_config.yaml"/>
        <param name="video_device" value="/dev/video6" />
        <param name="image_width" value="640" />
        <param name="image_height" value="480" />
        <param name="pixel_format" value="yuyv" />
        <param name="camera_frame_id" value="arm_cam" />
        <param name="io_method" value="mmap"/>
    </node>

    <!-- Node that runs the mapping in the background -->
    <!-- <node pkg="slam" name="mapping_node" exec="slam"/> -->

    <node pkg="slam" name="localisation_node" exec="localisation"/>

    <node pkg="slam" name="lidar_filter" exec="lidar_filter"/>

    <!--node for state machine-->
    <!-- <node pkg="controller" name="state_machine" exec="state_machine
    
    "/> -->

    <!-- Odometry Node-->
    <node pkg="odometry" exec="odometry" name ="odometry_node"/>

    <node pkg="detection" name="Neural_net" exec="detection_NN_b"/>
    <node pkg="slam" name="NN_handler" exec="NN_detections_handler"/> 
    <node pkg="detection" name="Neural_net_arm" exec="detection_arm_cam"/> 
    <node pkg="controller" name="IK" exec="ik"/>
    
</launch>